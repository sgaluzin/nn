digraph fullGraph {
	nodesep=1;
	rankdir=TB;
	ranksep="1.5 equally";
	Node_0xc0001c2fc0:Node_0xc0001c2fc0:anchor->Node_0xc0001c2e00:Node_0xc0001c2e00:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c2fc0:Node_0xc0001c2fc0:anchor->Node_0xc0001c2d20:Node_0xc0001c2d20:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c30a0:Node_0xc0001c30a0:anchor->Node_0xc0001c2fc0:Node_0xc0001c2fc0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3180:Node_0xc0001c3180:anchor->Node_0xc0001c30a0:Node_0xc0001c30a0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3260:Node_0xc0001c3260:anchor->Node_0xc0001c2ee0:Node_0xc0001c2ee0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3260:Node_0xc0001c3260:anchor->Node_0xc0001c30a0:Node_0xc0001c30a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c3340:Node_0xc0001c3340:anchor->Node_0xc0001c3260:Node_0xc0001c3260:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3420:Node_0xc0001c3420:anchor->Node_0xc0001c3340:Node_0xc0001c3340:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c35e0:Node_0xc0001c35e0:anchor->Node_0xc0001c3340:Node_0xc0001c3340:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c36c0:Node_0xc0001c36c0:anchor->Node_0xc0001c3340:Node_0xc0001c3340:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c37a0:Node_0xc0001c37a0:anchor->Node_0xc0001c35e0:Node_0xc0001c35e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c37a0:Node_0xc0001c37a0:anchor->Node_0xc0001c36c0:Node_0xc0001c36c0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c3880:Node_0xc0001c3880:anchor->Node_0xc0001c3420:Node_0xc0001c3420:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3880:Node_0xc0001c3880:anchor->Node_0xc0001c37a0:Node_0xc0001c37a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c3960:Node_0xc0001c3960:anchor->Node_0xc0001c3880:Node_0xc0001c3880:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3b20:Node_0xc0001c3b20:anchor->Node_0xc0001c3a40:Node_0xc0001c3a40:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3b20:Node_0xc0001c3b20:anchor->Node_0xc0001c37a0:Node_0xc0001c37a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c3c00:Node_0xc0001c3c00:anchor->Node_0xc0001c3880:Node_0xc0001c3880:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3c00:Node_0xc0001c3c00:anchor->Node_0xc0001c37a0:Node_0xc0001c37a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c3c00:Node_0xc0001c3c00:anchor->Node_0xc0001c3ce0:Node_0xc0001c3ce0:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3ce0:Node_0xc0001c3ce0:anchor->Node_0xc0001c3dc0:Node_0xc0001c3dc0:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c3dc0:Node_0xc0001c3dc0:anchor->Node_0xc0001c3a40:Node_0xc0001c3a40:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0001c3b20:Node_0xc0001c3b20:anchor->Node_0xc0001c3ea0:Node_0xc0001c3ea0:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2000:Node_0xc0002e2000:anchor->Node_0xc0001c3ea0:Node_0xc0001c3ea0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2000:Node_0xc0002e2000:anchor->Node_0xc0001c35e0:Node_0xc0001c35e0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e20e0:Node_0xc0002e20e0:anchor->Node_0xc0002e2000:Node_0xc0002e2000:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0001c36c0:Node_0xc0001c36c0:anchor->Node_0xc0002e20e0:Node_0xc0002e20e0:anchor[ dir=back, labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e21c0:Node_0xc0002e21c0:anchor->Node_0xc0001c3260:Node_0xc0001c3260:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e21c0:Node_0xc0002e21c0:anchor->Node_0xc0002e22a0:Node_0xc0002e22a0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e21c0:Node_0xc0002e21c0:anchor->Node_0xc0002e2380:Node_0xc0002e2380:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e20e0:Node_0xc0002e20e0:anchor->Node_0xc0002e2380:Node_0xc0002e2380:anchor[ dir=back, labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e2380:Node_0xc0002e2380:anchor->Node_0xc0002e2460:Node_0xc0002e2460:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2540:Node_0xc0002e2540:anchor->Node_0xc0001c2fc0:Node_0xc0001c2fc0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2620:Node_0xc0002e2620:anchor->Node_0xc0002e2540:Node_0xc0002e2540:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2700:Node_0xc0002e2700:anchor->Node_0xc0001c30a0:Node_0xc0001c30a0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2620:Node_0xc0002e2620:anchor->Node_0xc0002e2700:Node_0xc0002e2700:anchor[ dir=back, labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e2700:Node_0xc0002e2700:anchor->Node_0xc0002e27e0:Node_0xc0002e27e0:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e2460:Node_0xc0002e2460:anchor->Node_0xc0002e27e0:Node_0xc0002e27e0:anchor[ dir=back, labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e27e0:Node_0xc0002e27e0:anchor->Node_0xc0002e28c0:Node_0xc0002e28c0:anchor[ dir=back, labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e28c0:Node_0xc0002e28c0:anchor->Node_0xc0001c2d20:Node_0xc0001c2d20:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e29a0:Node_0xc0002e29a0:anchor->Node_0xc0001c2e00:Node_0xc0001c2e00:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc0002e27e0:Node_0xc0002e27e0:anchor->Node_0xc0002e29a0:Node_0xc0002e29a0:anchor[ dir=back, labelfloat=false, taillabel=" 1 " ];
	Node_0xc0002e20e0->Node_0xc0001c3340[ constraint=false, style=dashed, weight=999 ];
	Node_0xc0001c3a40->Node_0xc0001c3880[ constraint=false, style=dashed, weight=999 ];
	Node_0xc0002e29a0->Node_0xc0001c2d20[ constraint=false, style=dashed, weight=999 ];
	Node_0xc0002e27e0->Node_0xc0001c2fc0[ constraint=false, style=dashed, weight=999 ];
	Node_0xc0002e2380->Node_0xc0001c3260[ constraint=false, style=dashed, weight=999 ];
	Node_0xc0002e2460->Node_0xc0001c30a0[ constraint=false, style=dashed, weight=999 ];
	Node_0xc0001c3b20->Node_0xc0001c3420[ constraint=false, style=dashed, weight=999 ];
	outsideRoot->insideInputs[ constraint=false, style=invis, weight=999 ];
	outsideConsts->insideConsts[ constraint=false, style=invis, weight=999 ];
	outsideRoot->outsideConsts[ constraint=false, style=invis, weight=999 ];
	insideInputs->insideConsts[ constraint=false, style=invis, weight=999 ];
	outsideExprG->insideExprG[ constraint=false, style=invis, weight=999 ];
	outsideConsts->outsideExprG[ constraint=false, style=invis, weight=999 ];
	insideConsts->insideExprG[ constraint=false, style=invis, weight=999 ];
	outside_gradients->inside_gradients[ constraint=false, style=invis, weight=999 ];
	outsideExprG->outside_gradients[ constraint=false, style=invis, weight=999 ];
	insideExprG->inside_gradients[ constraint=false, style=invis, weight=999 ];
	subgraph cluster_expressionGraph {
	label=expressionGraph;
	Node_0xc0001c2fc0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>3</TD><TD>A × B(%1, %0) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>A × B :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Matrix (1, 1) [1 1]<BR />[[6.59e+04]]</TD><TD>Matrix (1, 1) [1 1]<BR />[[  0]] </TD></TR>
<TR><TD>Ptr: 0x824635586560x </TD><TD>Ptr: 0xc0001c7818 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c30a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>4</TD><TD>sigmoid(%3) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Matrix (1, 1) [1 1]<BR />[[  0]]</TD><TD>Matrix (1, 1) [1 1]<BR />[[  2]] </TD></TR>
<TR><TD>Ptr: 0x824635586584x </TD><TD>Ptr: 0xc0001c7b58 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3180 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;"  BGCOLOR="lightblue">

<TR><TD>5</TD><TD>read sigmoid(%3) :: Matrix float64 into 0xc0002d4070 :: NIL</TD></TR>


<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3260 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6</TD><TD>- false(%2, %4) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>- false :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Matrix (1, 1) [1 1]<BR />[[ -2]]</TD><TD>Matrix (1, 1) [1 1]<BR />[[ -2]] </TD></TR>
<TR><TD>Ptr: 0x824635586728x </TD><TD>Ptr: 0xc0001c78a8 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3340 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>7</TD><TD>square(%6) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>square :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Matrix (1, 1) [1 1]<BR />[[  1]]</TD><TD>Matrix (1, 1) [1 1]<BR />[[  1]] </TD></TR>
<TR><TD>Ptr: 0x824635586816x </TD><TD>Ptr: 0xc0001c7b00 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3420 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>8</TD><TD>Σ[0 1](%7) :: float64</TD></TR>
<TR><TD>Op</TD><TD>Σ[0 1] :: Tensor-0 a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>float64   1</TD><TD>float64   1 </TD></TR>
<TR><TD>Ptr: 0x824635586864x </TD><TD>Ptr: 0xc0001c7998 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c37a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>b</TD><TD>⊙ false(%9, %a) :: float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3880 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>c</TD><TD>÷ false(%8, %b) :: float64</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>float64   1</TD><TD>float64   1 </TD></TR>
<TR><TD>Ptr: 0x824635586960x </TD><TD>Ptr: 0xc0001c64a0 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3960 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;"  BGCOLOR="lightblue">

<TR><TD>d</TD><TD>read ÷ false(%8, %b) :: float64 into 0xc0002d4080 :: NIL</TD></TR>


<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e2000 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>14</TD><TD>Repeat0(%13, %9) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>Repeat0 :: Matrix a → a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  1]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e2540 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>1a</TD><TD>neg(%3) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>neg :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[-6.59e+04]]</TD></TR>


</TABLE>
>, shape=none ];
	insideExprG [ style=invis ];

}
;
	subgraph cluster_gradients {
	label=gradients;
	Node_0xc0001c35e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>9</TD><TD>SizeOf=1(%7) :: float64</TD></TR>
<TR><TD>Op</TD><TD>SizeOf=1 :: Matrix a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c36c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>a</TD><TD>SizeOf=1(%7) :: float64</TD></TR>
<TR><TD>Op</TD><TD>SizeOf=1 :: Matrix a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3b20 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>f</TD><TD>÷ false(%e, %b) :: float64</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3c00 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>10</TD><TD>÷ false(%c, %b) :: float64</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3ce0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>11</TD><TD>neg(%10) :: float64</TD></TR>
<TR><TD>Op</TD><TD>neg :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64  -1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3dc0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;" >

<TR><TD>12</TD><TD>⊙ false(%11, %e) :: float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: a → a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64  -1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c3ea0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>13</TD><TD>Reshape(1, 1)(%f) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>Reshape(1, 1) :: a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  1]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e20e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>15</TD><TD>Repeat1(%14, %a) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>Repeat1 :: Matrix a → a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  1]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e21c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>17</TD><TD>⊙ false(%6, %16) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Matrix a → a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[ -2]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e2380 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>18</TD><TD>⊙ false(%17, %15) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[ -2]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e2460 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>19</TD><TD>neg(%18) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>neg :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  2]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e2620 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>1b</TD><TD>sigmoid(%1a) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  0]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e2700 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>1c</TD><TD>⊙ false(%4, %1b) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  0]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e27e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>1d</TD><TD>⊙ false(%1c, %19) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  0]]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e28c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;" >

<TR><TD>1e</TD><TD>A × Bᵀ(%1d, %0) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>A × Bᵀ :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(1, 3)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (1, 3) [3 1]<BR />R[  0    0    0]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e29a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;" >

<TR><TD>1f</TD><TD>Aᵀ × B(%1, %1d) :: Matrix float64</TD></TR>
<TR><TD>Op</TD><TD>Aᵀ × B :: Matrix a → Matrix a → Matrix a</TD></TR>
<TR><TD>Shape</TD><TD>(3, 1)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (3, 1) [1 1]<BR />C[  0    0    0]</TD></TR>


</TABLE>
>, shape=none ];
	inside_gradients [ style=invis ];

}
;
	subgraph inputConsts {
	rank=max;
	subgraph cluster_constants {
	label=constants;
	Node_0xc0001c3a40 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;">

<TR><TD>e</TD><TD>1 :: float64</TD></TR>
<TR><TD>Op</TD><TD>const 1 :: float64</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   1</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0002e22a0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;">

<TR><TD>16</TD><TD>2 :: float64</TD></TR>
<TR><TD>Op</TD><TD>const 2 :: float64</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>float64   2</TD></TR>


</TABLE>
>, shape=none ];
	insideConsts [ style=invis ];

}
;
	subgraph cluster_inputs {
	label=inputs;
	Node_0xc0001c2d20 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>0</TD><TD>w0 :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(3, 1)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>
<TR><TD>Value</TD><TD>Grad</TD></TR>
<TR><TD>Vector (3, 1) [1 1]<BR />C[ 0.14  0.786  0.833]</TD><TD>Vector (3, 1) [1 1]<BR />C[  0    0    0] </TD></TR>
<TR><TD>Ptr: 0x824634959504x </TD><TD>Ptr: 0xc00001c240 </TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c2e00 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>1</TD><TD>X :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(1, 3)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (1, 3) [3 1]<BR />R[      0       25  7.9e+04]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc0001c2ee0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>2</TD><TD>Y :: Matrix float64</TD></TR>

<TR><TD>Shape</TD><TD>(1, 1)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (1, 1) [1 1]<BR />[[  0]]</TD></TR>


</TABLE>
>, shape=none ];
	insideInputs [ style=invis ];

}
;

}
;
	subgraph outsides {
	outsideConsts [ style=invis ];
	outsideExprG [ style=invis ];
	outsideRoot [ style=invis ];
	outside_gradients [ style=invis ];

}
;

}
